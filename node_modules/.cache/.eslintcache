[{"C:\\Users\\VelevG\\Desktop\\gitcards\\src\\index.js":"1","C:\\Users\\VelevG\\Desktop\\gitcards\\src\\reportWebVitals.js":"2","C:\\Users\\VelevG\\Desktop\\gitcards\\src\\components\\App.js":"3","C:\\Users\\VelevG\\Desktop\\gitcards\\src\\components\\CardList.js":"4","C:\\Users\\VelevG\\Desktop\\gitcards\\src\\components\\Card.js":"5","C:\\Users\\VelevG\\Desktop\\gitcards\\src\\components\\Form.js":"6"},{"size":546,"mtime":1681394867545,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1681392879437,"results":"9","hashOfConfig":"8"},{"size":701,"mtime":1681397856036,"results":"10","hashOfConfig":"8"},{"size":220,"mtime":1681398132455,"results":"11","hashOfConfig":"8"},{"size":729,"mtime":1681398744346,"results":"12","hashOfConfig":"8"},{"size":980,"mtime":1681398567846,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k57i2q",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\VelevG\\Desktop\\gitcards\\src\\index.js",[],[],"C:\\Users\\VelevG\\Desktop\\gitcards\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\VelevG\\Desktop\\gitcards\\src\\components\\App.js",["35","36"],[],"import Card from \"./Card\";\nimport * as React from \"react\";\nimport axios from \"axios\";\nimport Form from \"./Form\";\nimport CardList from \"./CardList\";\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n    this.setState((prevState) => ({\n      profiles: [...prevState.profiles, profileData],\n    }));\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom\">\n          {this.props.title}\n        </div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\VelevG\\Desktop\\gitcards\\src\\components\\CardList.js",[],[],"C:\\Users\\VelevG\\Desktop\\gitcards\\src\\components\\Card.js",["37"],[],"import * as React from \"react\";\r\n\r\nclass Card extends React.Component {\r\n  render() {\r\n    const profile = this.props;\r\n    return (\r\n      <div className=\"mt-3\">\r\n        <div className=\"card\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <img\r\n              className=\"img-responsive img-rounded\"\r\n              style={{ maxHeight: 250, maxWidth: 250 }}\r\n              src={profile.avatar_url}\r\n            />\r\n          </div>\r\n          <div className=\"card-body text-center\">\r\n              <div className=\"card-title\">{profile.name}</div>\r\n              <div className=\"card-text\">{profile.company}</div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","C:\\Users\\VelevG\\Desktop\\gitcards\\src\\components\\Form.js",[],[],{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":10,"column":13,"nodeType":"45","endLine":14,"endColumn":15},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]